SignIn.jsx :
//here u added some class names
import { useState } from "react";
import PropTypes from "prop-types"; // Import PropTypes for validation
import "./styles/SignIn.css";
import { Link } from "react-router-dom";

const SignIn = ({ onLogin }) => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  //this was handleSubmit ps: i will change the logic here
  const handleLogin = (e) => {
    e.preventDefault();
    // Validate email and password (mock validation for now)
    if (email === "e@e" && password === "p") {
      alert("Sign-in successful!");
      onLogin(); // Update the isLoggedIn state in the App component
    } else {
      alert("Invalid email or password.");
    }
  };

  return (
    <div className="signin-container signin-page">
      <div className="signin-left">
        <h1 className="signin-title">Sign In</h1>
        <form className="signin-form" onSubmit={handleLogin}>
          <input
            type="email"
            placeholder="Email"
            className="signin-input"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <input
            type="password"
            placeholder="Password"
            className="signin-input"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button type="submit" className="signin-button">
            Sign In
          </button>
        </form>
        <p>
          Don't have an account? <Link to="/signup">Sign Up</Link>
        </p>
      </div>
      <div className="signin-right"></div> {/* Empty div for the image */}
    </div>
  );
};

// Add prop validation
SignIn.propTypes = {
  onLogin: PropTypes.func.isRequired, // Ensure onLogin is passed and is a function
};

export default SignIn;
,,,,,
SignIn.css:
/* Container for the whole page, split into two halves */

/*try*/

.signin-container {
  display: flex;
  flex-direction: row; /* Split into two halves horizontally */
  height: 100vh; /* Full viewport height */
  background-color: #f6f5f3; /* Set background specifically for the sign-in page */
  /* Remove inherited background from app.css */
}

/* Left half of the page for the form */
.signin-left {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 20px;
  box-sizing: border-box;
}

.signin-title {
  font-size: 2rem;
  margin-bottom: 1rem;
  color: #333;
}

.signin-form {
  width: 100%;
  max-width: 400px;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.signin-input {
  padding: 10px;
  font-size: 1rem;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.signin-button {
  padding: 10px;
  font-size: 1rem;
  color: #fff;
  background-color: #007bff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.signin-button:hover {
  background-color: #0056b3;
}

/* Right half of the page for the image */
.signin-right {
  flex: 1;
  background-image: url("auth.png"); /* Replace with your actual image path */
  background-size: cover;
  background-position: center;
  height: 100%; /* Ensure image takes up the full height */
  width: 100%; /* Ensure image takes up the full width of its container */
}

